set(TARGET_NAME ${PROJECT_NAME})
# just for qt
set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

file(GLOB_RECURSE HEADER_FILES "*.h")
file(GLOB_RECURSE SOURCE_FILES "*.cpp")
file(GLOB_RECURSE UI_FILES "*.ui")
file(GLOB_RECURSE QML_SRC "*.qml")
set(QRCFILE ${CMAKE_CURRENT_SOURCE_DIR}/ui/resources.qrc)
set(APP_ICON_RESOURCE_WINDOWS  ${CMAKE_CURRENT_SOURCE_DIR}/ui/resources/appicon.rc)
qt6_wrap_ui(UI_HEADERS UI_FILES) 

source_group(TREE "${CMAKE_CURRENT_SOURCE_DIR}" FILES ${HEADER_FILES} ${SOURCE_FILES} ${UI_FILES} ${QML_SRC})
qt_add_executable(${TARGET_NAME} ${HEADER_FILES} ${SOURCE_FILES} ${UI_FILES} ${APP_ICON_RESOURCE_WINDOWS} ${QRCFILE} ${QML_SRC})

set_target_properties(${TARGET_NAME} PROPERTIES CXX_STANDARD 17 OUTPUT_NAME ${PROJECT_NAME})
set_target_properties(${TARGET_NAME} PROPERTIES FOLDER ${PROJECT_NAME})

target_compile_options(${TARGET_NAME} PUBLIC "$<$<COMPILE_LANG_AND_ID:CXX,MSVC>:/WX->")

target_link_libraries(${TARGET_NAME} PRIVATE Qt6::Core Qt6::Gui Qt6::Quick Qt6::Widgets "${PROJECT_NAME}Runtime")

target_include_directories(
  ${TARGET_NAME} 
  PUBLIC 
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
)

foreach(QML_FILE ${QML_SRC})
    get_filename_component(QML_FILE_NAME ${QML_FILE} NAME)
    if(NOT QML_FILE_LIST)
      set(QML_FILE_LIST "ui/${QML_FILE_NAME}")
    else()
      list(APPEND QML_FILE_LIST "ui/${QML_FILE_NAME}")
    endif()
endforeach()
qt_add_qml_module(${TARGET_NAME}
  URI /
  VERSION 1.0
  RESOURCE_PREFIX /
)

# add_custom_command(TARGET ${TARGET_NAME} POST_BUILD
# COMMAND ${CMAKE_COMMAND} -E make_directory "${BINARY_ROOT_DIR}"
# COMMAND ${CMAKE_COMMAND} -E copy "${ENGINE_ROOT_DIR}/${TARGET_NAME}.ini" "${BINARY_ROOT_DIR}"
# COMMAND ${CMAKE_COMMAND} -E copy_directory "${CMAKE_CURRENT_SOURCE_DIR}/resource" "${BINARY_ROOT_DIR}/resource"
# COMMAND ${CMAKE_COMMAND} -E copy_directory "$<TARGET_FILE_DIR:${TARGET_NAME}>/" "${BINARY_ROOT_DIR}"
# COMMAND ${CMAKE_COMMAND} -E remove_directory "${BINARY_ROOT_DIR}/${ENGINE_ASSET_DIR}"
# COMMAND ${CMAKE_COMMAND} -E copy_directory "${ENGINE_ROOT_DIR}/${ENGINE_ASSET_DIR}" "${BINARY_ROOT_DIR}/${ENGINE_ASSET_DIR}"
# )